###################################
# spray-can Reference Config File #
###################################

# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

spray.can {
  server {
    # the value of the server header to produce
    # Set to the empty string to disable rendering of the server header.
    server-header = spray-can/${spray.version}

    # Enables/disables SSL encryption
    # If enabled the server uses the implicit ServerSSLEngineProvider parameter of the
    # server actor constructor to create SSLEngines for the underlying IO connection
    ssl-encryption = off

    # the maximum number of requests that are accepted (and dispatched to
    # the application) on one single connection before the first request
    # has to be completed
    # Incoming requests that would cause the pipelining limit to be exceeded are not
    # read from the connections socket so as to build up "back-pressure" to the
    # client via TCP flow control.
    # The default setting of 1 disables HTTP pipelining, since only one request per
    # connection can be "open" (i.e. being processed by the application) at any time.
    # Set to higher values to enable HTTP pipelining.
    # This value must be > 0 and <= 16
    pipelining-limit = 1

    # the time after which an idle connection will be automatically closed
    # Set to zero to completely disable idle connection timeouts.
    idle-timeout = 120 s

    # If a request hasn't been responded to after the time period set here
    # a spray.http.Timeout message will be sent to the timeout handler.
    # Set to zero to completely disable request timeouts.
    request-timeout = 30 s

    # After a Timeout message has been sent to the timeout handler and the
    # request still hasn't been completed after the time period set here
    # the server will complete the request itself with an error response.
    # Set to zero to disable timeout timeouts.
    timeout-timeout = 500 ms

    # the path of the actor to send spray.http.Timeout messages to
    # If empty all Timeout messages will go to the "regular" request handling actor.
    timeout-handler = ""

    # the "granularity" of timeout checking for both idle connections timeouts
    # as well as request timeouts, should rarely be needed to modify
    reaping-cycle = 100 ms

    # Enables/disables support for statistics collection and querying.
    # Even though stats keeping overhead is small,
    # for maximum performance switch off when not needed.
    stats-support = on

    # Enables/disables the adding of a `Remote-Address` header
    # holding the clients (remote) IP address.
    remote-address-header = off

    # Enables/disables automatic handling of HEAD requests.
    # If this setting is enabled the server dispatches HEAD requests as GET requests to the
    # application and automatically strips off all message bodies from outgoing responses.
    # Note that, even when this setting is 'off' the server will never send out message
    # bodies on responses to HEAD requests.
    transparent-head-requests = on

    # Enables/disables an alternative response streaming mode that doesn't
    # use "Transfer-Encoding: chunked" but rather renders the individual MessageChunks
    # coming in from the application as parts of the original response entity.
    # Enabling this mode causes all connections to be closed after a streaming response
    # has been finished since there is no other way to signal the response end to the client.
    # Note that chunkless-streaming is implicitly enabled when response streaming to
    # HTTP/1.0 clients (since they don't support "Transfer-Encoding: chunked")
    chunkless-streaming = off

    # Enables/disables the returning of more detailed error messages to
    # the client in the error response
    # Should be disabled for browser-facing APIs due to the risk of XSS attacks
    # and (probably) enabled for internal or non-browser APIs
    # (Note that spray will always produce log messages containing the full error details)
    verbose-error-messages = off

    # If this setting is non-zero the HttpServer automatically aggregates incoming
    # request chunks into full HttpRequests before dispatching them to the application.
    # If the size of the aggregated requests surpasses the specified limit the server
    # will respond with a '413 Request Entity Too Large' error response before closing
    # the connection. Set to zero to disable automatic request chunk aggregation and
    # have ChunkedRequestStart, MessageChunk and ChunkedMessageEnd messages be dispatched
    # to the application.
    request-chunk-aggregation-limit = 1m

    # the initial size if the buffer to render the response in
    # can be used for fine-tuning response rendering performance but probably doesn't
    # have to be fiddled with in most applications
    response-size-hint = 1k

    # modify to tweak parsing settings on the server-side only
    parsing = ${spray.can.parsing}
  }

  client {
    # the value of the user-agent header to produce, set to the empty string
    # to disable rendering of the user-agent header
    user-agent-header = spray-can/${spray.version}

    # the time after which an idle connection will be automatically closed
    # set to zero to completely disable idle timeouts
    idle-timeout = 10 s

    # if a request hasn't been responded to after the time period set here the connection
    # will be closed and the application will receive a respective `Closed` message .
    # set to zero to completely disable request timeouts
    request-timeout = 5 s

    # the "granularity" of timeout checking for both idle connections timeouts
    # as well as request timeouts, should rarely be needed to modify
    reaping-cycle = 100 ms

    # If this setting is non-zero the HttpClient automatically aggregates incoming
    # response chunks into full HttpResponses before dispatching them to the application.
    # If the size of the aggregated response surpasses the specified limit the HttpClient
    # will close the connection and return an error.
    # Set to zero to disable automatic request chunk aggregation and have
    # ChunkedResponseStart, MessageChunk and ChunkedMessageEnd messages be dispatched
    # to the application.
    response-chunk-aggregation-limit = 1m

    # the initial size if the buffer to render the request in
    # can be used for fine-tuning request rendering performance but probably doesn't
    # have to be fiddled with in most applications
    request-size-hint = 512

    # modify to tweak parsing settings on the client-side only
    parsing = ${spray.can.parsing}
  }

  # The (default) configuration of the HTTP message parser for the server and the client
  parsing {
    max-uri-length             = 2k
    max-response-reason-length = 64
    max-header-name-length     = 64
    max-header-value-length    = 8k
    max-header-count           = 64
    max-content-length         = 8m
    max-chunk-ext-name-length  = 64
    max-chunk-ext-value-length = 256
    max-chunk-ext-count        = 16
    max-chunk-size             = 1m
  }
}
